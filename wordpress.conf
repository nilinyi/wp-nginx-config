server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/wordpress;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	# server_name _;

	# Handle requests for favicon.ico efficiently
	# - Disables logging for these requests to avoid cluttering the logs
	# - Useful for browsers that request favicon.ico frequently
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	# Handle requests for robots.txt
	# - Allows access to all robots.txt requests (common for SEO and web crawlers)
	# - Disables logging for these requests for cleaner logs
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Default location block to handle all URIs
	# - Tries to serve the file directly if it exists, reducing processing load
	# - If the file is not found, forwards the request to index.php (useful for CMSs like WordPress)
	# - Includes the query string in the request to index.php, preserving URL parameters
	location / {
		# This is cool because no php is touched for static content.
		# include the "?$args" part so non-default permalinks doesn't break when using query string
		try_files $uri $uri/ /index.php?$args;
	}

	# Location block for handling static files (JavaScript, CSS, images)
	# - Sets expiration to maximum, which aids in client-side caching for better performance
	# - Disables logging of file not found errors to keep logs clean and focused on more critical issues
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires max;
		log_not_found off;
	}

	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# - Security measure to prevent access to sensitive system files
	# - Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	# Deny access to any files with a .php extension in the uploads directory
	# - Prevents execution of PHP scripts in sensitive directories
	# - Works in sub-directory installs and also in multisite network
	# - Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}

	# pass PHP scripts to FastCGI server
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/run/php/php8.2-fpm.sock;
	}
}
